{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy

  assign first_collection = section.settings.first_collection
  assign first_collection_title = section.settings.first_collection_title
  assign second_collection = section.settings.second_collection
  assign second_collection_title = section.settings.second_collection_title

  assign use_variants = section.settings.use_variants
  assign box_variants = section.settings.box_variants

  assign products_row_mobile = section.settings.products_row_mobile
  assign products_row = section.settings.products_row
  assign products_gap_mobile = section.settings.products_gap_mobile
  assign products_gap = section.settings.products_gap

  assign card_padding_vertical = section.settings.card_padding_vertical
  assign card_padding_vertical_mobile = section.settings.card_padding_vertical_mobile
  assign card_padding_horizontal = section.settings.card_padding_horizontal
  assign card_padding_horizontal_mobile = section.settings.card_padding_horizontal_mobile
  assign card_radius = section.settings.card_radius
  assign card_border_thickness = section.settings.card_border_thickness
  assign card_border_color = section.settings.card_border_color
  assign card_border_hover_color = section.settings.card_border_hover_color
  assign card_bg_color = section.settings.card_bg_color
  assign card_bg_hover_color = section.settings.card_bg_hover_color
  assign card_shadow = section.settings.card_shadow
  assign card_shadow_hover = section.settings.card_shadow_hover
  assign card_shadow_color = section.settings.card_shadow_color
  assign card_shadow_hover_color = section.settings.card_shadow_hover_color
  assign card_second_hover = section.settings.card_second_hover

  assign image_radius = section.settings.image_radius
  assign image_border_thickness = section.settings.image_border_thickness
  assign image_border_color = section.settings.image_border_color
  assign image_ratio = section.settings.image_ratio
  assign image_ratio_mobile = section.settings.image_ratio_mobile

  assign title_size = section.settings.title_size
  assign title_size_mobile = section.settings.title_size_mobile
  assign title_color = section.settings.title_color
  assign title_custom = section.settings.title_custom
  assign title_font = section.settings.title_font
  assign title_height = section.settings.title_height
  assign title_mt = section.settings.title_mt
  assign title_uppercase = section.settings.title_uppercase

  assign vendor_size = section.settings.vendor_size
  assign vendor_size_mobile = section.settings.vendor_size_mobile
  assign vendor_color = section.settings.vendor_color
  assign vendor_custom = section.settings.vendor_custom
  assign vendor_font = section.settings.vendor_font
  assign vendor_height = section.settings.vendor_height
  assign vendor_mt = section.settings.vendor_mt
  assign vendor_uppercase = section.settings.vendor_uppercase

  assign button = section.settings.button
  assign button_size = section.settings.button_size
  assign button_size_mobile = section.settings.button_size_mobile
  assign button_color = section.settings.button_color
  assign button_hover_color = section.settings.button_hover_color
  assign button_custom = section.settings.button_custom
  assign button_font = section.settings.button_font
  assign button_height = section.settings.button_height
  assign button_mt = section.settings.button_mt
  assign button_padding_vertical = section.settings.button_padding_vertical
  assign button_padding_vertical_mobile = section.settings.button_padding_vertical_mobile
  assign button_padding_horizontal = section.settings.button_padding_horizontal
  assign button_padding_horizontal_mobile = section.settings.button_padding_horizontal_mobile
  assign button_radius = section.settings.button_radius
  assign button_border_thickness = section.settings.button_border_thickness
  assign button_border_color = section.settings.button_border_color
  assign button_border_hover_color = section.settings.button_border_hover_color
  assign button_bg_color = section.settings.button_bg_color
  assign button_bg_hover_color = section.settings.button_bg_hover_color

  assign box_width = section.settings.box_width
  assign box_border_color = section.settings.box_border_color
  assign box_border_thickness = section.settings.box_border_thickness
  assign box_radius = section.settings.box_radius

  assign header_padding_vertical = section.settings.header_padding_vertical
  assign header_padding_vertical_mobile = section.settings.header_padding_vertical_mobile
  assign header_padding_horizontal = section.settings.header_padding_horizontal
  assign header_padding_horizontal_mobile = section.settings.header_padding_horizontal_mobile
  assign header_bg_color = section.settings.header_bg_color

  assign heading = section.settings.heading
  assign heading_size = section.settings.heading_size
  assign heading_size_mobile = section.settings.heading_size_mobile
  assign heading_color = section.settings.heading_color
  assign heading_custom = section.settings.heading_custom
  assign heading_font = section.settings.heading_font
  assign heading_height = section.settings.heading_height
  assign heading_align = section.settings.heading_align
  assign heading_align_mobile = section.settings.heading_align_mobile

  assign sub_heading = section.settings.sub_heading
  assign sub_heading_size = section.settings.sub_heading_size
  assign sub_heading_size_mobile = section.settings.sub_heading_size_mobile
  assign sub_heading_color = section.settings.sub_heading_color
  assign sub_heading_custom = section.settings.sub_heading_custom
  assign sub_heading_font = section.settings.sub_heading_font
  assign sub_heading_height = section.settings.sub_heading_height
  assign sub_heading_align = section.settings.sub_heading_align
  assign sub_heading_align_mobile = section.settings.sub_heading_align_mobile
  assign sub_heading_mt = section.settings.sub_heading_mt

  assign body_padding_vertical = section.settings.body_padding_vertical
  assign body_padding_vertical_mobile = section.settings.body_padding_vertical_mobile
  assign body_padding_horizontal = section.settings.body_padding_horizontal
  assign body_padding_horizontal_mobile = section.settings.body_padding_horizontal_mobile

  assign pick = section.settings.pick
  assign pick_size = section.settings.pick_size
  assign pick_size_mobile = section.settings.pick_size_mobile
  assign pick_color = section.settings.pick_color
  assign pick_custom = section.settings.pick_custom
  assign pick_font = section.settings.pick_font
  assign pick_height = section.settings.pick_height
  assign pick_align = section.settings.pick_align
  assign pick_align_mobile = section.settings.pick_align_mobile
  assign pick_mt = section.settings.pick_mt
  assign pick_mt_mobile = section.settings.pick_mt_mobile

  assign tabs_border_color = section.settings.tabs_border_color
  assign tabs_border_thickness = section.settings.tabs_border_thickness
  assign tabs_radius = section.settings.tabs_radius
  assign tabs_mt = section.settings.tabs_mt

  assign tab_size = section.settings.tab_size
  assign tab_size_mobile = section.settings.tab_size_mobile
  assign tab_color = section.settings.tab_color
  assign tab_hover_color = section.settings.tab_hover_color
  assign tab_active_color = section.settings.tab_active_color
  assign tab_custom = section.settings.tab_custom
  assign tab_font = section.settings.tab_font
  assign tab_height = section.settings.tab_height
  assign tab_padding_vertical = section.settings.tab_padding_vertical
  assign tab_padding_vertical_mobile = section.settings.tab_padding_vertical_mobile
  assign tab_padding_horizontal = section.settings.tab_padding_horizontal
  assign tab_padding_horizontal_mobile = section.settings.tab_padding_horizontal_mobile
  assign tab_bg_color = section.settings.tab_bg_color
  assign tab_bg_hover_color = section.settings.tab_bg_hover_color
  assign tab_bg_active_color = section.settings.tab_bg_active_color

  assign checkboxes_mt = section.settings.checkboxes_mt

  assign first_checkbox_discount = section.settings.first_checkbox_discount
  assign first_checkbox_discount_second = section.settings.first_checkbox_discount_second
  assign first_checkbox = section.settings.first_checkbox
  assign second_checkbox_discount = section.settings.second_checkbox_discount
  assign second_checkbox_discount_second  = section.settings.second_checkbox_discount_second 
  assign second_checkbox = section.settings.second_checkbox
  assign third_checkbox_discount = section.settings.third_checkbox_discount
  assign third_checkbox_discount_second = section.settings.third_checkbox_discount_second
  assign third_checkbox = section.settings.third_checkbox

  assign checkbox_size = section.settings.checkbox_size
  assign checkbox_size_mobile = section.settings.checkbox_size_mobile
  assign checkbox_color = section.settings.checkbox_color
  assign checkbox_custom = section.settings.checkbox_custom
  assign checkbox_font = section.settings.checkbox_font
  assign checkbox_height = section.settings.checkbox_height
  assign checkbox_bg_color = section.settings.checkbox_bg_color
  assign checkbox_circle_color = section.settings.checkbox_circle_color

  assign price_size = section.settings.price_size
  assign price_size_mobile = section.settings.price_size_mobile
  assign price_strikethrough_size = section.settings.price_strikethrough_size
  assign price_strikethrough_size_mobile = section.settings.price_strikethrough_size_mobile
  assign price_color = section.settings.price_color
  assign price_strikethrough_color = section.settings.price_strikethrough_color
  assign price_custom = section.settings.price_custom
  assign price_font = section.settings.price_font
  assign price_height = section.settings.price_height

  assign main_button = section.settings.main_button
  assign main_left_button = section.settings.main_left_button
  assign main_right_button = section.settings.main_right_button
  assign main_button_size = section.settings.main_button_size
  assign main_button_size_mobile = section.settings.main_button_size_mobile
  assign main_button_color = section.settings.main_button_color
  assign main_button_hover_color = section.settings.main_button_hover_color
  assign main_button_custom = section.settings.main_button_custom
  assign main_button_font = section.settings.main_button_font
  assign main_button_height = section.settings.main_button_height
  assign main_button_mt = section.settings.main_button_mt
  assign main_button_padding_vertical = section.settings.main_button_padding_vertical
  assign main_button_padding_vertical_mobile = section.settings.main_button_padding_vertical_mobile
  assign main_button_padding_horizontal = section.settings.main_button_padding_horizontal
  assign main_button_padding_horizontal_mobile = section.settings.main_button_padding_horizontal_mobile
  assign main_button_radius = section.settings.main_button_radius
  assign main_button_border_thickness = section.settings.main_button_border_thickness
  assign main_button_border_color = section.settings.main_button_border_color
  assign main_button_border_hover_color = section.settings.main_button_border_hover_color
  assign main_button_bg_color = section.settings.main_button_bg_color
  assign main_button_bg_hover_color = section.settings.main_button_bg_hover_color

  assign close_bg_color = section.settings.close_bg_color

  assign select_color = section.settings.select_color
  assign select_bg_color = section.settings.select_bg_color
  assign select_border_color = section.settings.select_border_color
  
-%}

{%- style -%}

  {{  title_font | font_face: font_display: 'swap' }}
  {{  vendor_font | font_face: font_display: 'swap' }}
  {{  button_font | font_face: font_display: 'swap' }}
  {{  heading_font | font_face: font_display: 'swap' }}
  {{  sub_heading_font | font_face: font_display: 'swap' }}
  {{  pick_font | font_face: font_display: 'swap' }}
  {{  tab_font | font_face: font_display: 'swap' }}
  {{  checkbox_font | font_face: font_display: 'swap' }}
  {{  price_font | font_face: font_display: 'swap' }}
  {{  main_button_font | font_face: font_display: 'swap' }}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .box-body-{{ section.id }} {
    display: flex;
    flex-direction: column-reverse;
    gap: {{ products_gap_mobile }}px;
    position: relative;
  }

  .box-products-grid-{{ section.id }} {
    display: none;
    grid-template-columns: repeat({{ products_row_mobile }}, 1fr);
    gap: {{ products_gap_mobile }}px;
  }

  .box-products-grid-{{ section.id }}.active {
    display: grid;
  }

  .box-product-{{ section.id }} {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    padding: {{ card_padding_vertical_mobile }}px {{ card_padding_horizontal_mobile }}px;
    border-radius: {{ card_radius }}px;
    border: {{ card_border_thickness }}px solid {{ card_border_color }};
    background-color: {{ card_bg_color }};
    cursor: pointer;
    transition: all 0.25s ease 0s;
  }

  .box-product-{{ section.id }}:hover {
    background-color: {{ card_bg_hover_color }};
    border: {{ card_border_thickness }}px solid {{ card_border_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .box-product-image-{{ section.id }} {
    border-radius: {{ image_radius }}px;
    border: {{ image_border_thickness }}px solid {{ image_border_color }};
    overflow: hidden;
    position: relative;
  }

  .box-product-image-{{ section.id }} svg,
  .box-product-image-{{ section.id }} img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .box-product-image-{{ section.id }}.has-secondary-{{ section.id }} {
    position: relative;
  }
  
  .box-product-image-{{ section.id }}.has-secondary-{{ section.id }} .box-product-second-image-{{ section.id }} {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    margin: 0 auto;
    display: none;
  }

  .box-product-title-{{ section.id }} {
    margin: 0px;
    margin-top: {{ title_mt | times: 0.75 | round: 0 }}px;
    font-size: {{ title_size_mobile }}px;
    color: {{ title_color }};
    line-height: {{ title_height }}%;
    text-transform: unset;
    text-align: center;
  }

  .box-product-vendor-{{ section.id }} {
    margin: 0px;
    margin-top: {{ vendor_mt | times: 0.75 | round: 0 }}px;
    font-size: {{ vendor_size_mobile }}px;
    color: {{ vendor_color }};
    line-height: {{ vendor_height }}%;
    text-transform: unset;
    text-align: center;
  }

  .box-variants-select-wrapper-{{ section.id }} {
    position: relative;
  }

  .box-variants-select-{{ section.id }} {
    margin-top: 10px;
    position: relative;
    cursor: pointer;
    font-size: 14px;
    line-height: 100%;
    color: {{ select_color }};
    font-weight: 500;
    border: 1px solid {{ select_border_color }};
    background-color: {{ select_bg_color }};
    border-radius: {{ button_radius }}px;
    padding: 10px 30px 10px 10px;
    width: 100%;
    appearance: none;
    outline: none;
    box-shadow: none;
    box-sizing: border-box;
  }

  .box-variants-select-wrapper-{{ section.id }} > span {
    pointer-events: none;
    position: absolute;
    right: 5px;
    bottom: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 35px;
    height: calc(100% - 10px);
  }

  .box-variants-select-wrapper-{{ section.id }} > span svg {
    stroke: unset;
    fill: {{ select_color }};
  }

  .box-product-button-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    margin: 0;
    margin-top: {{ button_mt | times: 0.75 | round: 0 }}px;
    font-size: {{ button_size_mobile }}px;
    color: {{ button_color }};
    line-height: {{ button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ button_padding_vertical_mobile }}px {{ button_padding_horizontal_mobile }}px;
    border-radius: {{ button_radius }}px;
    border: {{ button_border_thickness }}px solid {{ button_border_color }};
    background-color: transparent;
    background-color: {{ button_bg_color }};
    transition: all 0.25s ease 0s;
    cursor: pointer;
  }

  .box-product-button-{{ section.id }}:hover {
    color: {{ button_hover_color }};
    border: {{ button_border_thickness }}px solid {{ button_border_hover_color }};
    background-color: {{ button_bg_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .box-info-{{ section.id }} {
    overflow: hidden;
    flex: 0 0 100%;
    max-height: 95vh;
    overflow-y: auto;
  }

  .box-header-{{ section.id }} {
    padding: {{ header_padding_vertical_mobile }}px {{ header_padding_horizontal_mobile }}px;
  }

  .box-heading-{{ section.id }} {
    text-align: {{ heading_align_mobile }};
  }

  .box-heading-{{ section.id }} * {
    margin: 0;
    font-size: {{ heading_size_mobile }}px;
    color: {{ heading_color }};
    line-height: {{ heading_height }}%;
    text-transform: unset;
  }

  .box-subheading-{{ section.id }} {
    margin-top: {{ sub_heading_mt }}px;
    text-align: {{ sub_heading_align_mobile }};
  }

  .box-subheading-{{ section.id }} * {
    margin: 0;
    font-size: {{ sub_heading_size_mobile }}px;
    color: {{ sub_heading_color }};
    line-height: {{ sub_heading_height }}%;
    text-transform: unset;
  }

  .box-inner-{{ section.id }} {
    padding: {{ body_padding_vertical_mobile }}px {{ body_padding_horizontal_mobile }}px;
  }

  .box-desktop-items-{{ section.id }} {
    display: none;
  }

  .box-items-default-{{ section.id }} {
    display: none;
    justify-content: space-around;
    gap: 20px;
    padding: 0px 20px;
  }

  .box-items-default-{{ section.id }}:not(:first-child) {
    margin-top: 20px;
  }

  .box-items-default-{{ section.id }}.active {
    display: flex;
  }

  .box-items-default-{{ section.id }} > div {
    position: relative;
    flex: 1 0;
    min-height: 118px;
  }

  .box-items-default-{{ section.id }} > div > img,
  .box-items-default-{{ section.id }} > div > .not-empty,
  .box-items-default-{{ section.id }} > div > .not-empty svg,
  .box-items-default-{{ section.id }} > div svg:nth-child(2) {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .box-items-default-{{ section.id }} > div > .not-empty svg {
    background-color: #AFAFAF;
  }

  .box-pick-{{ section.id }} {
    margin-top: {{ pick_mt_mobile }}px;
    text-align: {{ pick_align_mobile }};
  }

  .box-pick-{{ section.id }} * {
    margin: 0;
    font-size: {{ pick_size_mobile }}px;
    color: {{ pick_color }};
    line-height: {{ pick_height }}%;
    text-transform: unset;
  }

  .box-tabs-{{ section.id }} {
    margin-top: {{ tabs_mt }}px;
    display: flex;
  }

  .box-tab-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1 0;
    font-size: {{ tab_size_mobile }}px;
    color: {{ tab_color }};
    line-height: {{ tab_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ tab_padding_vertical_mobile }}px {{ tab_padding_horizontal_mobile }}px;
    background-color: transparent;
    background-color: {{ tab_bg_color }};
    transition: all 0.25s ease 0s;
    cursor: pointer;
    border: 0px;
    box-shadow: none;
    border: {{ tabs_border_thickness }}px solid {{ tabs_border_color }};
    font-weight: 700;
  }

  .box-tab-{{ section.id }}:first-child {
    border-top-left-radius: {{ tabs_radius }}px;
    border-bottom-left-radius: {{ tabs_radius }}px;
  }

  .box-tab-{{ section.id }}:nth-child(2) {
    border-top-right-radius: {{ tabs_radius }}px;
    border-bottom-right-radius: {{ tabs_radius }}px;
    border-left: 0px;
  }

  .box-tab-only-{{ section.id }} {
    border-radius: {{ tabs_radius }}px;
  }

  .box-tab-{{ section.id }}:hover {
    color: {{ tab_hover_color }};
    background-color: {{ tab_bg_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .box-tab-{{ section.id }}.active {
    color: {{ tab_active_color }};
    background-color: {{ tab_bg_active_color }};
    transition: all 0.25s ease 0s;
  }

  .box-check-items-{{ section.id }} {
    margin-top: {{ checkboxes_mt }}px;
  }

  .box-check-item-{{ section.id }} {
    width: 100%;
    padding: 1rem;
    display: flex;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
    opacity: 0.9;
  }

  .box-check-item-{{ section.id }}:hover {
    opacity: 1;
  }

  .box-check-item-{{ section.id }}.active {
    background-color: {{ checkbox_bg_color }};
    box-shadow: 0 2px 4px #0003;
  }

  .box-checked-{{ section.id }} {
    display: none;
  }

  .box-check-item-{{ section.id }}.active .box-unchecked-{{ section.id }} {
    display: none;
  }

  .box-check-item-{{ section.id }}.active .box-checked-{{ section.id }} {
    display: block;
  }

  .box-label-{{ section.id }} {
    margin: 0px;
    font-size: {{ checkbox_size_mobile }}px;
    color: {{ checkbox_color }};
    line-height: {{ checkbox_height }}%;
    text-transform: unset;
    font-weight: 700;
  }

  .box-price-{{ section.id }} {
    margin-left: auto;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .box-main-button-{{ section.id }} .box-price-{{ section.id }} {
    margin: 0px;
    margin-left: 10px;
  }

  .box-regular-price-{{ section.id }} {
    margin: 0px;
    font-size: {{ price_strikethrough_size_mobile }}px;
    color: {{ price_strikethrough_color }};
    line-height: {{ price_height }}%;
    text-transform: unset;
    text-decoration: line-through;
  }

  .box-main-button-{{ section.id }} .box-regular-price-{{ section.id }} {
    font-size: {{ main_button_size_mobile }}px;
    color: #f0f0f0;
  }

  .box-sale-price-{{ section.id }} {
    margin: 0px;
    font-size: {{ price_size_mobile }}px;
    color: {{ price_color }};
    line-height: {{ price_height }}%;
    text-transform: unset;
    text-decoration: none;
  }
  
  .box-main-button-{{ section.id }} .box-sale-price-{{ section.id }} {
    font-size: {{ main_button_size_mobile }}px;
    color: {{ main_button_color }};
  }

  .box-main-button-{{ section.id }} {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    margin: 0;
    margin-top: {{ main_button_mt | times: 0.75 | round: 0 }}px;
    font-size: {{ main_button_size_mobile }}px;
    color: {{ main_button_color }};
    line-height: {{ main_button_height }}%;
    text-align: center;
    text-transform: unset;
    text-decoration: none;
    padding: {{ main_button_padding_vertical_mobile }}px {{ main_button_padding_horizontal_mobile }}px;
    border-radius: {{ main_button_radius }}px;
    border: 0px;
    border: {{ main_button_border_thickness }}px solid {{ main_button_border_color }};
    background-color: transparent;
    background-color: {{ main_button_bg_color }};
    transition: all 0.25s ease 0s;
    cursor: pointer;
    box-shadow: none;
  }

  .box-main-button-{{ section.id }}:hover {
    color: {{ main_button_hover_color }};
    border: {{ main_button_border_thickness }}px solid {{ main_button_border_hover_color }};
    background-color: {{ main_button_bg_hover_color }};
    transition: all 0.25s ease 0s;
  }

  .box-main-button-{{ section.id }}[disabled] {
    cursor: not-allowed;
  }

  .box-count-{{ section.id }} {
    margin: 0px 3px;
  }

  .box-form-{{ section.id }} {
    display: none;
  }

  .box-footer-{{ section.id }} {
    position: fixed;
    z-index: 9999;
    width: 100%;
    box-sizing: border-box;
    bottom: 0;
    left: 0;
    padding: 1.25rem;
    background: #ffffffe6;
  }

  .box-footer-{{ section.id }} .box-main-button-{{ section.id }} {
    min-height: 60px;
  }

  .box-close-{{ section.id }} {
    display: none;
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translate(-50%,20%);
    width: 20px;
    height: 20px;
    cursor: pointer;
  }

  .box-footer-{{ section.id }} .box-items-{{ section.id }} {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    width: 95%;
    margin: 0px auto;
    gap: 12px;
  }

  .box-item-{{ section.id }} {
    width: 100%;
    max-width: 70px;
    min-height: 90px;
    position: relative;
    display: none;
  }

  .box-item-{{ section.id }}.active {
    display: flex;
    flex-direction: column;
  }

  .box-item-{{ section.id }} .not-empty {
    display: block;
    width: 100%;
    flex: 1 1 100%;
    object-fit: cover;
  }

  .box-item-{{ section.id }} .not-empty svg {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .box-item-{{ section.id }} .not-empty svg {
    background-color: #AFAFAF;
  }

  

  @media(min-width: 576px) {
    .box-products-grid-{{ section.id }} {
      grid-template-columns: repeat({{ products_row | times: 0.5 | round: 0 }}, 1fr);
    }
  }

  @media(min-width: 768px) {
    .box-products-grid-{{ section.id }} {
      grid-template-columns: repeat({{ products_row }}, 1fr);
    }
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .box-body-{{ section.id }} {
      flex-direction: row;
      gap: {{ products_gap }}px;
      align-items: start;
    }

    .box-products-{{ section.id }} {
      flex: 0 1 calc(100% - {{ box_width }}px);
    }

    .box-info-{{ section.id }} {
      position: sticky;
      top: 0px;
      flex: 0 0 {{ box_width }}px;
      border-radius: {{ box_radius }}px;
      border: {{ box_border_thickness }}px solid {{ box_border_color }};
    }

    .box-products-grid-{{ section.id }} {
      grid-template-columns: repeat({{ products_row | times: 0.5 | round: 0 }}, 1fr);
      gap: {{ products_gap }}px;
    }

    .box-product-{{ section.id }} {
      padding: {{ card_padding_vertical }}px {{ card_padding_horizontal }}px;
    }

    .box-product-title-{{ section.id }} {
      margin-top: {{ title_mt }}px;
      font-size: {{ title_size }}px;
    }

    .box-product-vendor-{{ section.id }} {
      margin-top: {{ vendor_mt }}px;
      font-size: {{ vendor_size }}px;
    }

    .box-product-button-{{ section.id }} {
      margin-top: {{ button_mt }}px;
      padding: {{ button_padding_vertical }}px {{ button_padding_horizontal }}px;
      font-size: {{ button_size }}px;
    }

    .box-header-{{ section.id }} {
      padding: {{ header_padding_vertical }}px {{ header_padding_horizontal }}px;
      background-color: {{ header_bg_color }};
    }

    .box-heading-{{ section.id }} {
      text-align: {{ heading_align }};
    }
  
    .box-heading-{{ section.id }} * {
      font-size: {{ heading_size }}px;
    }

    .box-subheading-{{ section.id }} {
      margin-top: {{ sub_heading_mt }}px;
      text-align: {{ sub_heading_align }};
    }
  
    .box-subheading-{{ section.id }} * {
      font-size: {{ sub_heading_size }}px;
    }

    .box-inner-{{ section.id }} {
      padding: {{ body_padding_vertical }}px {{ body_padding_horizontal }}px;
    }

    .box-desktop-items-{{ section.id }} {
      display: block;
    }

    .box-pick-{{ section.id }} {
      margin-top: {{ pick_mt }}px;
      text-align: {{ pick_align }};
    }
  
    .box-pick-{{ section.id }} * {
      font-size: {{ pick_size }}px;
    }

    .box-tabs-{{ section.id }} {
      margin-top: {{ tabs_mt }}px;
    }

    .box-tab-{{ section.id }} {
      padding: {{ tab_padding_vertical }}px {{ tab_padding_horizontal }}px;
      font-size: {{ tab_size }}px;
    }

    .box-check-items-{{ section.id }} {
      margin-top: {{ checkboxes_mt }}px;
    }

    .box-label-{{ section.id }} {
      font-size: {{ checkbox_size }}px;
    }

    .box-regular-price-{{ section.id }} {
      font-size: {{ price_strikethrough_size }}px;
    }

    .box-sale-price-{{ section.id }} {
      font-size: {{ price_size }}px;
    }

    .box-main-button-{{ section.id }} {
      margin-top: {{ main_button_mt }}px;
      padding: {{ main_button_padding_vertical }}px {{ main_button_padding_horizontal }}px;
      font-size: {{ main_button_size }}px;
    }

    .box-main-button-{{ section.id }} .box-price-{{ section.id }} {
      display: none;
    }

    .box-form-{{ section.id }} {
      display: block;
    }

    .box-footer-{{ section.id }} {
      display: none;
    }

    .box-close-{{ section.id }} {
      width: 24px;
      height: 24px;
      top: -12px;
      left: -12px;
      transform: none;
    }
  }

  @media(min-width: 1200px) {
    .box-products-grid-{{ section.id }} {
      grid-template-columns: repeat({{ products_row }}, 1fr);
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}rem;
    }
  </style>
{% endunless %}

{% if title_custom %}
  <style>
    .box-product-title-{{ section.id }} {
      font-family: {{ title_font.family }}, {{ title_font.fallback_families }};
      font-weight: {{ title_font.weight }};
      font-style: {{ title_font.style }};
    }
  </style>
{% endif %}

{% if vendor_custom %}
  <style>
    .box-product-vendor-{{ section.id }} {
      font-family: {{ vendor_font.family }}, {{ vendor_font.fallback_families }};
      font-weight: {{ vendor_font.weight }};
      font-style: {{ vendor_font.style }};
    }
  </style>
{% endif %}

{% if button_custom %}
  <style>
    .box-product-button-{{ section.id }} {
      font-family: {{ button_font.family }}, {{ button_font.fallback_families }};
      font-weight: {{ button_font.weight }};
      font-style: {{ button_font.style }};
    }
  </style>
{% endif %}

{% if heading_custom %}
  <style>
    .box-heading-{{ section.id }} * {
      font-family: {{ heading_font.family }}, {{ heading_font.fallback_families }};
      font-weight: {{ heading_font.weight }};
      font-style: {{ heading_font.style }};
    }
  </style>
{% endif %}

{% if sub_heading_custom %}
  <style>
    .box-subheading-{{ section.id }} * {
      font-family: {{ sub_heading_font.family }}, {{ sub_heading_font.fallback_families }};
      font-weight: {{ sub_heading_font.weight }};
      font-style: {{ sub_heading_font.style }};
    }
  </style>
{% endif %}

{% if pick_custom %}
  <style>
    .box-pick-{{ section.id }} * {
      font-family: {{ pick_font.family }}, {{ pick_font.fallback_families }};
      font-weight: {{ pick_font.weight }};
      font-style: {{ pick_font.style }};
    }
  </style>
{% endif %}

{% if tab_custom %}
  <style>
    .box-tab-{{ section.id }} {
      font-family: {{ tab_font.family }}, {{ tab_font.fallback_families }};
      font-weight: {{ tab_font.weight }};
      font-style: {{ tab_font.style }};
    }
  </style>
{% endif %}

{% if checkbox_custom %}
  <style>
    .box-label-{{ section.id }} {
      font-family: {{ checkbox_font.family }}, {{ checkbox_font.fallback_families }};
      font-weight: {{ checkbox_font.weight }};
      font-style: {{ checkbox_font.style }};
    }
  </style>
{% endif %}

{% if price_custom %}
  <style>
    .box-regular-price-{{ section.id }},
    .box-sale-price-{{ section.id }} {
      font-family: {{ price_font.family }}, {{ price_font.fallback_families }};
      font-weight: {{ price_font.weight }};
      font-style: {{ price_font.style }};
    }
  </style>
{% endif %}

{% if main_button_custom %}
  <style>
    .box-main-button-{{ section.id }},
    .box-main-button-{{ section.id }} {
      font-family: {{ main_button_font.family }}, {{ main_button_font.fallback_families }};
      font-weight: {{ main_button_font.weight }};
      font-style: {{ main_button_font.style }};
    }
  </style>
{% endif %}

{% if card_shadow %}
  <style>
    .box-product-{{ section.id }} {
      box-shadow: {{ card_shadow_color | hex_to_rgba: 0.15 }} 0px 2px 8px;
    }
  </style>
{% endif %}

{% if card_shadow_hover %}
  <style>
    .box-product-{{ section.id }}:hover {
      box-shadow: {{ card_shadow_hover_color | hex_to_rgba: 0.15 }} 0px 2px 8px;
    }
  </style>
{% endif %}

{% if image_ratio_mobile == "portrait" %}
  <style>
    .box-product-image-{{ section.id }} {
     aspect-ratio: 9.6/14; 
    }
  </style>
{% elsif image_ratio_mobile == "landscape" %}
  <style>
    .box-product-image-{{ section.id }}{
     aspect-ratio: 12/9; 
    }
  </style>
{% elsif image_ratio_mobile == "square" %}
  <style>
    .box-product-image-{{ section.id }} {
     aspect-ratio: 12/12; 
    }
  </style>
{% else%}
  <style>
    .box-product-image-{{ section.id }} {
     aspect-ratio: auto; 
    }
  </style>
{% endif %}

{% if image_ratio == "portrait" %}
  <style>
    @media(min-width: 1024px) {
     .box-product-image-{{ section.id }} {
       aspect-ratio: 9.6/14; 
      } 
    }
  </style>
{% elsif image_ratio == "landscape" %}
  <style>
    @media(min-width: 1024px) {
      .box-product-image-{{ section.id }}{
       aspect-ratio: 12/9; 
      }
    }
  </style>
{% elsif image_ratio == "square" %}
  <style>
    @media(min-width: 1024px) {
      .box-product-image-{{ section.id }} {
       aspect-ratio: 12/12; 
      }
    }
  </style>
{% else%}
  <style>
    @media(min-width: 1024px) {
      .box-product-image-{{ section.id }} {
       aspect-ratio: auto; 
      }
    }
  </style>
{% endif %}

{% if title_uppercase %}
  <style>
    .box-product-title-{{ section.id }} {
      text-transform: uppercase;
    }
  </style>
{% endif %}

{% if vendor_uppercase %}
  <style>
    .box-product-vendor-{{ section.id }} {
      text-transform: uppercase;
    }
  </style>
{% endif %}

{% if card_second_hover %}
  <style>
    @keyframes fade-in-{{ section.id }} {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }

    .box-product-{{ section.id }}:hover .box-product-second-image-{{ section.id }} {
      display: block !important;
      position: static !important;
      -webkit-animation: fade-in-{{ section.id }} 0.5s;
      animation: fade-in-{{ section.id }} 0.5s;
    }

    .box-product-{{ section.id }}:hover .has-secondary-{{ section.id }} .box-product-first-image-{{ section.id }} {
      display: none;
    }

    .box-product-{{ section.id }}:hover .box-product-second-image-{{ section.id }} {
      display: block !important;
      position: static !important;
      -webkit-animation: fade-in-{{ section.id }} 0.5s;
      animation: fade-in-{{ section.id }} 0.5s;
    }

    .box-product-{{ section.id }}:hover .has-secondary-{{ section.id }} .box-product-first-image-{{ section.id }} {
      display: none;
    }
  </style>
{% endif %}

<div class="section-{{ section.id }} box-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      <div class="box-body-{{ section.id }}">
        <div class="box-products-{{ section.id }}">
          {% if first_collection != blank %}
            <div class="box-products-grid-{{ section.id }} active" data-id="box-products-grid-first-{{ section.id }}">
              {% for product in collections[first_collection].products %}
                <div class="box-product-{{ section.id }}" data-price="{{ product.selected_or_first_available_variant.price }}" data-id="{{ product.selected_or_first_available_variant.id }}">
                
                  <div cllass="box-product-top-{{ section.id }}">
                    
                    <div class="box-product-image-{{ section.id }} {% if product.images.size > 1 %} has-secondary-{{ section.id }} {% endif %}">
                      {% if product.selected_or_first_available_variant.featured_image != blank %}
                        <img src="{{ product.selected_or_first_available_variant.featured_image | image_url }}" alt="{{ product.selected_or_first_available_variant.featured_image.alt }}" class="box-product-main-image-{{ section.id }} {% if product.images.size > 1 and card_second_hover %}box-product-first-image-{{ section.id }}{% endif %}" {% if lazy %}loading="lazy"{% endif %}>
                        
                        {% if product.images.size > 1 and card_second_hover %}
                          {% for image in product.images %}
                            {% if forloop.index == 2 %}
                              <img src="{{ image | image_url }}" alt="{{ image.alt }}" class="box-product-second-image-{{ section.id }}">
                            {% endif %}
                          {% endfor %}
                        {% endif %}

                      {% elsif product.featured_image != blank %}

                        <img src="{{ product.featured_image | image_url }}" alt="{{ product.featured_image.alt }}" class="box-product-main-image-{{ section.id }} {% if product.images.size > 1 and card_second_hover %}box-product-first-image-{{ section.id }}{% endif %}" {% if lazy %}loading="lazy"{% endif %}>
                        
                        {% if product.images.size > 1 and card_second_hover %}
                          {% for image in product.images %}
                            {% if forloop.index == 2 %}
                              <img src="{{ image | image_url }}" alt="{{ image.alt }}" class="box-product-second-image-{{ section.id }}">
                            {% endif %}
                          {% endfor %}
                        {% endif %}
                        
                      {% else %}
                        {{ 'image' | placeholder_svg_tag }}
                      {% endif %}
                    </div>
                    
                    <h2 class="box-product-title-{{ section.id }}">{{ product.title }}</h2>
                    
                    {% if product.vendor != blank %}
                      <p class="box-product-vendor-{{ section.id }}">{{ product.vendor }}</p>
                    {% endif %}
                  </div>
                  
                  <div class="box-product-bottom-{{ section.id }}">
                    {% if use_variants %}
                      {% unless product.variants.size < 2 %}
                        <div class="box-variants-select-wrapper-{{ section.id }}">
                          <select
                            class="box-variants-select-{{ section.id }}"
                            {% if product.variants.size < 2 %}
                            style="display: none;"
                            {% endif %}
                          >
                            {% for variant in product.variants %}
                              <option value="{{ variant.id }}-{{ variant.price }}">{{ variant.title }}</option>
                            {% endfor %}
                          </select>
                          <span>
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokelinejoin="2" strokelinecap="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                          </span>
                        </div>
                      {% endunless %}
                    {% endif %}
                  
                    <button class="box-product-button-{{ section.id }}">{{ button }}</button>
                    
                  </div>
                </div>
              {% endfor %}
            </div>
          {% endif %}
          {% if second_collection != blank %}
            <div class="box-products-grid-{{ section.id }}" data-id="box-products-grid-second-{{ section.id }}">
              {% for product in collections[second_collection].products %}
                <div class="box-product-{{ section.id }}" data-price="{{ product.selected_or_first_available_variant.price }}" data-id="{{ product.selected_or_first_available_variant.id }}">
                
                  <div cllass="box-product-top-{{ section.id }}">
                    
                    <div class="box-product-image-{{ section.id }} {% if product.images.size > 1 %} has-secondary-{{ section.id }} {% endif %}">
                      {% if product.selected_or_first_available_variant.featured_image != blank %}
                        <img src="{{ product.selected_or_first_available_variant.featured_image | image_url }}" alt="{{ product.selected_or_first_available_variant.featured_image.alt }}" class="box-product-main-image-{{ section.id }} {% if product.images.size > 1 and card_second_hover %}box-product-first-image-{{ section.id }}{% endif %}" {% if lazy %}loading="lazy"{% endif %}>
                        
                        {% if product.images.size > 1 and card_second_hover %}
                          {% for image in product.images %}
                            {% if forloop.index == 2 %}
                              <img src="{{ image | image_url }}" alt="{{ image.alt }}" class="box-product-second-image-{{ section.id }}">
                            {% endif %}
                          {% endfor %}
                        {% endif %}

                      {% elsif product.featured_image != blank %}

                        <img src="{{ product.featured_image | image_url }}" alt="{{ product.featured_image.alt }}" class="box-product-main-image-{{ section.id }} {% if product.images.size > 1 and card_second_hover %}box-product-first-image-{{ section.id }}{% endif %}" {% if lazy %}loading="lazy"{% endif %}>
                        
                        {% if product.images.size > 1 and card_second_hover %}
                          {% for image in product.images %}
                            {% if forloop.index == 2 %}
                              <img src="{{ image | image_url }}" alt="{{ image.alt }}" class="box-product-second-image-{{ section.id }}">
                            {% endif %}
                          {% endfor %}
                        {% endif %}
                        
                      {% else %}
                        {{ 'image' | placeholder_svg_tag }}
                      {% endif %}
                    </div>
                    
                    <h2 class="box-product-title-{{ section.id }}">{{ product.title }}</h2>
                    
                    {% if product.vendor != blank %}
                      <p class="box-product-vendor-{{ section.id }}">{{ product.vendor }}</p>
                    {% endif %}
                  </div>
                  
                  <div class="box-product-bottom-{{ section.id }}">
                    {% if use_variants %}
                      {% unless product.variants.size < 2 %}
                        <div class="box-variants-select-wrapper-{{ section.id }}">
                          <select
                            class="box-variants-select-{{ section.id }}"
                            {% if product.variants.size < 2 %}
                            style="display: none;"
                            {% endif %}
                          >
                            {% for variant in product.variants %}
                              <option value="{{ variant.id }}-{{ variant.price }}">{{ variant.title }}</option>
                            {% endfor %}
                          </select>
                          <span>
                            <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokelinejoin="2" strokelinecap="round" class="feather feather-chevron-down"><polyline points="6 9 12 15 18 9"></polyline></svg>
                          </span>
                        </div>
                      {% endunless %}
                    {% endif %}
                  
                    <button class="box-product-button-{{ section.id }}">{{ button }}</button>
                  </div>
                  
                </div>
              {% endfor %}
            </div>
          {% endif %}
        </div>
        <div class="box-info-{{ section.id }}">
          <div class="box-header-{{ section.id }}">
            {% if heading != blank %}
              <div class="box-heading-{{ section.id }}">{{ heading }}</div>
            {% endif %}

            {% if sub_heading != blank %}
              <div class="box-subheading-{{ section.id }}">{{ sub_heading }}</div>
            {% endif %}
          </div>
          <div class="box-inner-{{ section.id }}">
            <div class="box-items-{{ section.id }} box-desktop-items-{{ section.id }}">
              <div class="box-first-items-{{ section.id }} box-items-default-{{ section.id }} active">

                <div class="box-first-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>

                </div>
                <div class="box-second-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>

                </div>
                {% if box_variants == "3_6_9" %}
                  <div class="box-third-item-{{ section.id }}">
                    <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                              <g id="close" transform="translate(932.000000, 312.000000)">
                                  <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                  <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                      <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                      <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                  </g>
                              </g>
                          </g>
                      </g>
                    </svg>
                    <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                      <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                      </mask>
                      <g mask="url(#mask0_4_10)">
                      <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                      </g>
                      <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                    </svg>
                  </div>
                {% endif %}
              </div>
              <div class="box-second-items-{{ section.id }} box-items-default-{{ section.id }}">
                <div class="box-first-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>
                </div>
                <div class="box-second-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>
                </div>
                {% if box_variants == "3_6_9" %}
                  <div class="box-third-item-{{ section.id }}">
                    <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                              <g id="close" transform="translate(932.000000, 312.000000)">
                                  <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                  <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                      <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                      <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                  </g>
                              </g>
                          </g>
                      </g>
                    </svg>
                    <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                      <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                      </mask>
                      <g mask="url(#mask0_4_10)">
                      <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                      </g>
                      <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                    </svg>
                  </div>
                {% endif %}
              </div>
              <div class="box-third-items-{{ section.id }} box-items-default-{{ section.id }}">
                <div class="box-first-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>
                </div>
                <div class="box-second-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>
                </div>
                {% if box_variants == "3_6_9" %}
                <div class="box-third-item-{{ section.id }}">
                  <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                    <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                            <g id="close" transform="translate(932.000000, 312.000000)">
                                <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                                <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                                    <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                                    <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                                </g>
                            </g>
                        </g>
                    </g>
                  </svg>
                  <svg class="box-default-{{ section.id }}" width="102" height="132" viewBox="0 0 102 132" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <mask id="mask0_4_10" style="mask-type:luminance" maskUnits="userSpaceOnUse" x="1" y="0" width="100" height="132">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" fill="white"/>
                    </mask>
                    <g mask="url(#mask0_4_10)">
                    <path d="M1 12L1.14578 11.9998C3.11002 5.28747 24.6801 0 51 0C77.3199 0 98.89 5.28747 100.854 11.9998L101 12V119C101 126.18 78.6142 132 51 132C23.3858 132 1 126.18 1 119V12Z" stroke="#979797" stroke-width="2" stroke-dasharray="4 4"/>
                    </g>
                    <path d="M1 13C1 20.1797 23.3858 26 51 26C78.6142 26 101 20.1797 101 13" stroke="#979797" stroke-dasharray="4 4"/>
                  </svg>
                </div>
                {% endif %}
              </div>
            </div>
            {% if pick != blank %}
              <div class="box-pick-{{ section.id }}">
                {{ pick }}
              </div>
            {% endif %}
            <div class="box-tabs-{{ section.id }}">
              {% if first_collection != blank %}
                <button class="box-tab-{{ section.id }} {% if second_collection == blank %}box-tab-only-{{ section.id }}{% endif %} active" data-type="first_type" id="box-products-grid-first-{{ section.id }}">
                  {% if first_collection_title != blank %}
                    {{ first_collection_title }}
                  {% else %}
                    {{ first_collection.title }}
                  {% endif %}
                </button>
              {% endif %}
              {% if second_collection != blank %}
                <button class="box-tab-{{ section.id }} {% if first_collection == blank %}box-tab-only-{{ section.id }}{% endif %}" data-type="second_type" id="box-products-grid-second-{{ section.id }}">
                  {% if second_collection_title != blank %}
                    {{ second_collection_title }}
                  {% else %}
                    {{ second_collection.title }}
                  {% endif %}
                </button>
              {% endif %}
            </div>
            <div class="box-check-items-{{ section.id }}">
              {% if first_checkbox != blank %}
                <div class="box-check-item-{{ section.id }} active" id="box-check-first-item-{{ section.id }}">
                  <svg class="box-unchecked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -607.000000)" stroke="#C2C2C2">
                              <circle id="Oval-Copy-2" cx="956" cy="620" r="12.5"></circle>
                          </g>
                      </g>
                  </svg>
                  <svg class="box-checked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -530.000000)">
                              <g id="Group-4" transform="translate(943.000000, 530.000000)">
                                  <circle id="Oval" stroke="#C2C2C2" cx="13" cy="13" r="12.5"></circle>
                                  <circle id="Oval" fill="{{ checkbox_circle_color }}" cx="13" cy="13" r="8"></circle>
                              </g>
                          </g>
                      </g>
                  </svg>
                  <p class="box-label-{{ section.id }}">{{ first_checkbox }}</p>
                  <p class="box-price-{{ section.id }}">
                    <span class="box-regular-price-{{ section.id }}"></span>
                    <span class="box-sale-price-{{ section.id }}"></span>
                  </p>
                </div>
              {% endif %}
              {% if second_checkbox != blank %}
                <div class="box-check-item-{{ section.id }}" id="box-check-second-item-{{ section.id }}">
                  <svg class="box-unchecked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -607.000000)" stroke="#C2C2C2">
                              <circle id="Oval-Copy-2" cx="956" cy="620" r="12.5"></circle>
                          </g>
                      </g>
                  </svg>
                  <svg class="box-checked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -530.000000)">
                              <g id="Group-4" transform="translate(943.000000, 530.000000)">
                                  <circle id="Oval" stroke="#C2C2C2" cx="13" cy="13" r="12.5"></circle>
                                  <circle id="Oval" fill="{{ checkbox_circle_color }}" cx="13" cy="13" r="8"></circle>
                              </g>
                          </g>
                      </g>
                  </svg>
                  <p class="box-label-{{ section.id }}">{{ second_checkbox }}</p>
                  <p class="box-price-{{ section.id }}">
                    <span class="box-regular-price-{{ section.id }}"></span>
                    <span class="box-sale-price-{{ section.id }}"></span>
                  </p>
                </div>
              {% endif %}
              {% if third_checkbox != blank %}
                <div class="box-check-item-{{ section.id }}" id="box-check-third-item-{{ section.id }}">
                  <svg class="box-unchecked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -607.000000)" stroke="#C2C2C2">
                              <circle id="Oval-Copy-2" cx="956" cy="620" r="12.5"></circle>
                          </g>
                      </g>
                  </svg>
                  <svg class="box-checked-{{ section.id }}" width="26px" height="26px" viewBox="0 0 26 26" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                      <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                          <g id="Build-a-Box---Desktop" transform="translate(-943.000000, -530.000000)">
                              <g id="Group-4" transform="translate(943.000000, 530.000000)">
                                  <circle id="Oval" stroke="#C2C2C2" cx="13" cy="13" r="12.5"></circle>
                                  <circle id="Oval" fill="{{ checkbox_circle_color }}" cx="13" cy="13" r="8"></circle>
                              </g>
                          </g>
                      </g>
                  </svg>
                  <p class="box-label-{{ section.id }}">{{ third_checkbox }}</p>
                  <p class="box-price-{{ section.id }}">
                    <span class="box-regular-price-{{ section.id }}"></span>
                    <span class="box-sale-price-{{ section.id }}"></span>
                  </p>
                </div>
              {% endif %}
            </div>
            <form class="box-form-{{ section.id }}" method="post" action="/cart/add" accept-charset="UTF-8" enctype="multipart/form-data" novalidate="novalidate" data-type="add-to-cart-form">
              
              <button type="submit" disabled data-all="{{ main_button }}" class="box-main-button-{{ section.id }}">{{ main_left_button }} <span class="box-count-{{ section.id }}">{% if box_variants == "3_6_9" %}3{% else %}2{% endif %}</span> {{ main_right_button }}</button>
            </form>
          </div>
        </div>
      </div>
    </div>
</div>

<div class="box-footer-{{ section.id }}">
  <div class="box-items-{{ section.id }}">
    {% for item in (1..9) %}
      <div class="box-item-{{ section.id }}">
        <svg class="box-close-{{ section.id }}" width="24px" height="24px" viewBox="0 0 24 24" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <g id="Wireframes" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
              <g id="Build-a-Box---Desktop" transform="translate(-932.000000, -312.000000)">
                  <g id="close" transform="translate(932.000000, 312.000000)">
                      <circle id="Oval" fill="{{ close_bg_color }}" cx="12" cy="12" r="12"></circle>
                      <g id="Group" transform="translate(8.000000, 8.714155)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="1.5">
                          <line x1="0.539869254" y1="0.561464944" x2="6.97012749" y2="6.27725004" id="Line-3" transform="translate(3.754998, 3.419385) rotate(3.366461) translate(-3.754998, -3.419385) "></line>
                          <line x1="0.713240223" y1="6.46111732" x2="6.79675978" y2="0.377597765" id="Line-3"></line>
                      </g>
                  </g>
              </g>
          </g>
        </svg>
      </div>
    {% endfor %}
  </div>
  <form class="box-footer-form-{{ section.id }}" method="post" action="/cart/add" accept-charset="UTF-8" enctype="multipart/form-data" novalidate="novalidate" data-type="add-to-cart-form">
    <button type="submit" disabled data-all="{{ main_button }}" class="box-main-button-{{ section.id }} box-main-button-footer-{{ section.id }}">{{ main_left_button }} <span class="box-count-{{ section.id }}">{% if box_variants == "3_6_9" %}3{% else %}2{% endif %}</span> {{ main_right_button }}</button>
  </form>
</div>

<script>
  var formayMoneyForBuyItWith = function(cents, format) {
      if (typeof cents == 'string') { cents = cents.replace('.',''); }
      var value = '';
      var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
      var formatString = (format || this.money_format);
    
      function defaultOption(opt, def) {
         return (typeof opt == 'undefined' ? def : opt);
      }
    
      function formatWithDelimiters(number, precision, thousands, decimal) {
        precision = defaultOption(precision, 2);
        thousands = defaultOption(thousands, ',');
        decimal   = defaultOption(decimal, '.');
    
        if (isNaN(number) || number == null) { return 0; }
    
        number = (number/100.0).toFixed(precision);
    
        var parts   = number.split('.'),
            dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
            cents   = parts[1] ? (decimal + parts[1]) : '';
    
        return dollars + cents;
      }
    
      switch(formatString.match(placeholderRegex)[1]) {
        case 'amount':
          value = formatWithDelimiters(cents, 2);
          break;
        case 'amount_no_decimals':
          value = formatWithDelimiters(cents, 0);
          break;
        case 'amount_with_comma_separator':
          value = formatWithDelimiters(cents, 2, '.', ',');
          break;
        case 'amount_no_decimals_with_comma_separator':
          value = formatWithDelimiters(cents, 0, '.', ',');
          break;
      }
    
      return formatString.replace(placeholderRegex, value);
    };
  
  function initBuildBox() {

    let countItems{{ section.id | replace: '-', '' }} = 0;
    let limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}3{% else %}2{% endif %};
    let discountType = "first_type";
    let sum = 0;
    let saleSum = 0;
    
    const productElements = document.querySelectorAll('.box-product-{{ section.id }}');
    
    productElements.forEach(productElement => {

        let select = productElement.querySelector('.box-variants-select-{{ section.id }}');

        if(select) {
           select.addEventListener('change', () => {
            const value = select.value;
            const parts = value.split('-');
            const variantId = parts[0];
            const variantPrice = parts[1];
            productElement.setAttribute("data-id", variantId);
            productElement.setAttribute("data-price", variantPrice);
          }) 
        }
      
        let toggle = productElement.querySelector('.box-product-button-{{ section.id }}');
        toggle.addEventListener('click', () => {
            const mainImage = productElement.querySelector('.box-product-main-image-{{ section.id }}');
            const mainSVG = productElement.querySelector('.box-product-image-{{ section.id }} svg');
            let dataId = productElement.getAttribute('data-id');
            let price = productElement.getAttribute('data-price');
            let salePrice;
            if(discountType == "first_type") {
              if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}3{% else %}2{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ first_checkbox_discount }}, 10) / 100);
              } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}6{% else %}4{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ second_checkbox_discount }}, 10) / 100);
              } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}9{% else %}6{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ third_checkbox_discount }}, 10) / 100);
              }
            } else if(discountType == "second_type") {
              if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}3{% else %}2{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ first_checkbox_discount_second }}, 10) / 100);
              } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}6{% else %}4{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ second_checkbox_discount_second }}, 10) / 100);
              } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}9{% else %}6{% endif %}) {
                salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ third_checkbox_discount_second }}, 10) / 100);
              }
            }
            
            const defaultItems = document.querySelectorAll('.box-items-default-{{ section.id }} > *');
            const defaultItems2 = document.querySelectorAll('.box-item-{{ section.id }}');
            if (countItems{{ section.id | replace: '-', '' }} < limitItems{{ section.id | replace: '-', '' }}) {
                const emptyItem = Array.from(defaultItems).find(item => !item.querySelector('.not-empty'));
                const emptyItem2 = Array.from(defaultItems2).find(item => !item.querySelector('.not-empty'));
                if (window.innerWidth > 1024) {
                  if (emptyItem) {
                    if(mainImage) {
                      const img = document.createElement('img');
                      img.src = mainImage.src;
                      img.classList.add('not-empty');
                      emptyItem.appendChild(img); 
                    } else {
                      const div = document.createElement('div');
                      div.classList.add('not-empty');
                      const svg = mainSVG.cloneNode(true);
                      div.appendChild(svg); 
                      emptyItem.appendChild(div); 
                    }
                    emptyItem.querySelector('.box-default-{{ section.id }}').style.display = "none";
                    emptyItem.querySelector('.box-close-{{ section.id }}').style.display = "block";
                    countItems{{ section.id | replace: '-', '' }}++;
  
                    emptyItem.setAttribute('data-id', dataId);
                  
                    emptyItem.setAttribute('data-price', price);
                    emptyItem.setAttribute('data-saleprice', salePrice);
                    sum = sum + Number(price);
                    saleSum = saleSum + Number(salePrice);
  
                    if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                      document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                        let count = limitItems{{ section.id | replace: '-', '' }} - countItems{{ section.id | replace: '-', '' }};
                        el.innerText = count;
                      })
                    }
                }
              } else {
                  if (emptyItem2) {
                    if(mainImage) {
                      const img = document.createElement('img');
                      img.src = mainImage.src;
                      img.classList.add('not-empty');
                      emptyItem2.appendChild(img); 
                    } else {
                      const div = document.createElement('div');
                      div.classList.add('not-empty');
                      const svg = mainSVG.cloneNode(true);
                      div.appendChild(svg); 
                      emptyItem.appendChild(div); 
                    }
                    emptyItem2.classList.add('active');
                    emptyItem2.querySelector('.box-close-{{ section.id }}').style.display = "block";
                    countItems{{ section.id | replace: '-', '' }}++;
  
                    emptyItem2.setAttribute('data-id', dataId);
                  
                    emptyItem2.setAttribute('data-price', price);
                    emptyItem2.setAttribute('data-saleprice', salePrice);
                    sum = sum + Number(price);
                    saleSum = saleSum + Number(salePrice);
  
                    if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                      document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                        let count = limitItems{{ section.id | replace: '-', '' }} - countItems{{ section.id | replace: '-', '' }};
                        el.innerText = count;
                      })
                    }
                }                  
              }


              if(document.querySelector('.box-form-{{ section.id }}')) {
                var productIdInput = document.createElement('input');
                productIdInput.type = 'hidden';
                productIdInput.name = 'items[' + countItems{{ section.id | replace: '-', '' }} + '][id]';
                productIdInput.id = productElement.getAttribute('data-id');
                productIdInput.value = productElement.getAttribute('data-id');
    
                var quantityInput = document.createElement('input');
                quantityInput.type = 'hidden';
                quantityInput.name = 'items[' + countItems{{ section.id | replace: '-', '' }} + '][quantity]';
                quantityInput.value = '1';
                quantityInput.id = productElement.getAttribute('data-id');
    
                document.querySelector('.box-form-{{ section.id }}').appendChild(productIdInput);
                document.querySelector('.box-form-{{ section.id }}').appendChild(quantityInput);
              }

              if(document.querySelector('.box-footer-form-{{ section.id }}')) {
                var productIdInput = document.createElement('input');
                productIdInput.type = 'hidden';
                productIdInput.name = 'items[' + countItems{{ section.id | replace: '-', '' }} + '][id]';
                productIdInput.id = productElement.getAttribute('data-id');
                productIdInput.value = productElement.getAttribute('data-id');
    
                var quantityInput = document.createElement('input');
                quantityInput.type = 'hidden';
                quantityInput.name = 'items[' + countItems{{ section.id | replace: '-', '' }} + '][quantity]';
                quantityInput.value = '1';
                quantityInput.id = productElement.getAttribute('data-id');
    
                document.querySelector('.box-footer-form-{{ section.id }}').appendChild(productIdInput);
                document.querySelector('.box-footer-form-{{ section.id }}').appendChild(quantityInput);
              }
            }

          if(countItems{{ section.id | replace: '-', '' }} == limitItems{{ section.id | replace: '-', '' }}) {
            let priceElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-regular-price-{{ section.id }}');
            let priceSaleElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-sale-price-{{ section.id }}');
            priceElement.innerText = formayMoneyForBuyItWith(sum, "{{ shop.money_format }}");
            priceSaleElement.innerText = formayMoneyForBuyItWith(saleSum, "{{ shop.money_format }}");
            if(document.querySelectorAll('.box-main-button-{{ section.id }}')) {
              document.querySelectorAll('.box-main-button-{{ section.id }}').forEach(el => {
                let text = el.getAttribute("data-all");
                el.innerHTML = text;
                el.removeAttribute('disabled');
                el.innerHTML += "<p class='box-price-{{ section.id }}'> â <span class='box-regular-price-{{ section.id }}'>" + formayMoneyForBuyItWith(sum, "{{ shop.money_format }}") + "</span> - <span class='box-sale-price-{{ section.id }}'> " + formayMoneyForBuyItWith(saleSum, "{{ shop.money_format }}") + "</span>";
              })
            }
          }
          
        });
    });

    const closeButtons = document.querySelectorAll('.box-close-{{ section.id }}');

    let buttonHtml;
    if(document.querySelector('.box-main-button-{{ section.id }}')) {
      buttonHtml = document.querySelector('.box-main-button-{{ section.id }}').innerHTML;
    }

    closeButtons.forEach(closeButton => {
        
        closeButton.addEventListener('click', () => {
            const parentElement = closeButton.parentNode;
            const image = parentElement.querySelector('.not-empty');
            if (image) {
                let dataId = parentElement.getAttribute('data-id');
                if(document.querySelectorAll('.box-form-{{ section.id }} input')) {
                  document.querySelectorAll('.box-form-{{ section.id }} input').forEach(el => {
                      if(el.id == dataId) {
                        if(el.name.includes(countItems{{ section.id | replace: '-', '' }})) {
                         el.parentNode.removeChild(el); 
                        }
                      }
                  })
                }

                if(document.querySelectorAll('.box-footer-form-{{ section.id }} input')) {
                  document.querySelectorAll('.box-footer-form-{{ section.id }} input').forEach(el => {
                      if(el.id == dataId) {
                        if(el.name.includes(countItems{{ section.id | replace: '-', '' }})) {
                         el.parentNode.removeChild(el); 
                        }
                      }
                  })
                }
              
                image.remove();
                closeButton.style.display = "none";
                if(parentElement.querySelector('.box-default-{{ section.id }}')) {
                 parentElement.querySelector('.box-default-{{ section.id }}').style.display = "block"; 
                }
                parentElement.classList.remove('active');
                countItems{{ section.id | replace: '-', '' }}--;
                let price = parentElement.getAttribute('data-price');
                let salePrice = parentElement.getAttribute('data-saleprice');
                sum = sum - Number(price);
                saleSum = saleSum - Number(salePrice);
                let priceElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-regular-price-{{ section.id }}');
                let priceSaleElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-sale-price-{{ section.id }}');
                priceElement.innerText = "";
                priceSaleElement.innerText = "";
                if(document.querySelectorAll('.box-main-button-{{ section.id }}')) {
                  document.querySelectorAll('.box-main-button-{{ section.id }}').forEach(el => {
                    el.innerHTML = buttonHtml;
                    el.setAttribute('disabled', '');
                  })
                }
                if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                  document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                    let count = limitItems{{ section.id | replace: '-', '' }} - countItems{{ section.id | replace: '-', '' }};
                    el.innerText = count;
                  })
                }
            }

        });
    });
    
    if(document.querySelectorAll('.box-tab-{{ section.id }}')) {
      document.querySelectorAll('.box-tab-{{ section.id }}').forEach(el => {
        el.addEventListener('click', () => {
          if(!el.classList.contains('active')) {
            let priceElements = document.querySelectorAll('.box-check-item-{{ section.id }} .box-regular-price-{{ section.id }}');
            let priceSaleElement = document.querySelectorAll('.box-check-item-{{ section.id }} .box-sale-price-{{ section.id }}');
            countItems{{ section.id | replace: '-', '' }} = 0;
            sum = 0;
            saleSum = 0;
            priceElements.forEach(el => {
              el.innerText = "";
            })
            priceSaleElement.forEach(el => {
              el.innerText = "";
            })
            if(document.querySelectorAll('.box-main-button-{{ section.id }}')) {
              document.querySelectorAll('.box-main-button-{{ section.id }}').forEach(el => {
                el.innerHTML = buttonHtml;
                el.setAttribute('disabled', '');
              })
            }
            if(document.querySelectorAll('.box-count-{{ section.id }}')) {
              document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                let count = limitItems{{ section.id | replace: '-', '' }} - countItems{{ section.id | replace: '-', '' }};
                el.innerText = count;  
              })
            }
            
            let items = document.querySelectorAll('.box-items-default-{{ section.id }}');
              if(items) {
                items.forEach(el => {
                  let innerItems = el.querySelectorAll('div');
                  if(innerItems) {
                    innerItems.forEach(element => {
                      const image = element.querySelector('.not-empty');
                      const closeButton = element.querySelector('.box-close-{{ section.id }}');
                      const itemDefault = element.querySelector('.box-default-{{ section.id }}');
                      if (image) {
                        image.remove();
                        closeButton.style.display = "none";
                        itemDefault.style.display = "block";
                      }
                    })
                  }
                })
              }

              let itemsSecond = document.querySelectorAll('.box-item-{{ section.id }}');
              if(itemsSecond) {
                itemsSecond.forEach(el => {
                  el.classList.remove('active');
                  let closeButton = el.querySelector('.box-close-{{ section.id }}');
                  if(closeButton) {
                    closeButton.style.display = "none";
                  }
                  if(el.querySelector('.not-empty')) {
                    el.querySelector('.not-empty').remove();
                  }
                })
              }

              if(document.querySelectorAll('.box-form-{{ section.id }} input')) {
                document.querySelectorAll('.box-form-{{ section.id }} input').forEach(el => {
                    el.parentNode.removeChild(el); 
                })
              }

              if(document.querySelectorAll('.box-footer-form-{{ section.id }} input')) {
                document.querySelectorAll('.box-footer-form-{{ section.id }} input').forEach(el => {
                    el.parentNode.removeChild(el); 
                })
              }
          }
          
          document.querySelectorAll('.box-tab-{{ section.id }}').forEach(element => {
            element.classList.remove('active');
          })
          el.classList.add('active');
          if(document.querySelectorAll('.box-products-grid-{{ section.id }}')) {
            document.querySelectorAll('.box-products-grid-{{ section.id }}').forEach(element => {
              element.classList.remove('active');
              let dataId = element.getAttribute('data-id');
              if(el.id == dataId) {
                element.classList.add('active');
              }
            })
          }
            
        })
      })
    }

    if(document.querySelectorAll('.box-check-item-{{ section.id }}')) {
      document.querySelectorAll('.box-check-item-{{ section.id }}').forEach(el => {
        el.addEventListener('click', () => {
          document.querySelectorAll('.box-check-item-{{ section.id }}').forEach(element => {
            element.classList.remove('active');
          })
          el.classList.add('active');
          let priceElements = document.querySelectorAll('.box-check-item-{{ section.id }} .box-regular-price-{{ section.id }}');
          let priceSaleElement = document.querySelectorAll('.box-check-item-{{ section.id }} .box-sale-price-{{ section.id }}');
          priceElements.forEach(el => {
            el.innerText = "";
          })
          priceSaleElement.forEach(el => {
            el.innerText = "";
          })
          if (window.innerWidth > 1024) {
            if(document.querySelectorAll('.box-items-default-{{ section.id }}')) {
              document.querySelectorAll('.box-items-default-{{ section.id }}').forEach(element => {
                element.classList.remove('active');
                if(el.id == "box-check-first-item-{{ section.id }}") {
                  if(element.classList.contains('box-first-items-{{ section.id }}')) {
                    element.classList.add('active');
                    if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                      document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                        document.querySelectorAll('.box-count-{{ section.id }}').innerText = "{% if box_variants == "3_6_9" %}3{% else %}2{% endif %}";
                      })
                    }
                    limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}3{% else %}2{% endif %};
                  } else {
                    let items = element.querySelectorAll('div');
                    if(items) {
                      items.forEach(el => {
                        if(document.querySelectorAll('.box-form-{{ section.id }} input')) {
                          document.querySelectorAll('.box-form-{{ section.id }} input').forEach(el => {
                              const name = el.getAttribute('name');
                              const match = name.match(/\[(\d+)\]/);
                            
                              if (match && parseInt(match[1]) > limitItems{{ section.id | replace: '-', '' }}) {
                                  el.remove();
                              }
                          });
                        }
  
                        if(document.querySelectorAll('.box-footer-form-{{ section.id }} input')) {
                          document.querySelectorAll('.box-footer-form-{{ section.id }} input').forEach(el => {
                              const name = el.getAttribute('name');
                              const match = name.match(/\[(\d+)\]/);
                            
                              if (match && parseInt(match[1]) > limitItems{{ section.id | replace: '-', '' }}) {
                                  el.remove();
                              }
                          });
                        }
                        const price = el.getAttribute('data-price');
                        const salePrice = el.getAttribute('data-saleprice');
                        const image = el.querySelector('img');
                        const closeButton = el.querySelector('.box-close-{{ section.id }}');
                        const itemDefault = el.querySelector('.box-default-{{ section.id }}');
                        if (image) {
                          image.remove();
                          closeButton.style.display = "none";
                          itemDefault.style.display = "block";
                          sum = sum - Number(price);
                          saleSum = saleSum - Number(salePrice);
                        }
                      })
                    }
                  }
                  
                } else if (el.id == "box-check-second-item-{{ section.id }}") {
                  if(element.classList.contains('box-first-items-{{ section.id }}') || element.classList.contains('box-second-items-{{ section.id }}')) {
                    element.classList.add('active');
                    if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                      document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                        el.innerHTML = "{% if box_variants == "3_6_9" %}6{% else %}4{% endif %}";
                      })
                    }
                    limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}6{% else %}4{% endif %};
                  } else {
                    let items = element.querySelectorAll('div');
                    if(items) {
                      items.forEach(el => {
                        if(document.querySelectorAll('.box-form-{{ section.id }} input')) {
                          document.querySelectorAll('.box-form-{{ section.id }} input').forEach(el => {
                              const name = el.getAttribute('name');
                              const match = name.match(/\[(\d+)\]/);
                            
                              if (match && parseInt(match[1]) > limitItems{{ section.id | replace: '-', '' }}) {
                                  el.remove();
                              }
                          });
                        }
                        
                        const price = el.getAttribute('data-price');
                        const salePrice = el.getAttribute('data-saleprice');
                        const image = el.querySelector('.not-empty');
                        const closeButton = el.querySelector('.box-close-{{ section.id }}');
                        const itemDefault = el.querySelector('.box-default-{{ section.id }}');
                        if (image) {
                          image.remove();
                          closeButton.style.display = "none";
                          itemDefault.style.display = "block";
                          sum = sum - Number(price);
                          saleSum = saleSum - Number(salePrice);
                        }
                      })
                    }
                  }
                } else if (el.id == "box-check-third-item-{{ section.id }}") {
                  if(element.classList.contains('box-first-items-{{ section.id }}') || element.classList.contains('box-second-items-{{ section.id }}') || element.classList.contains('box-third-items-{{ section.id }}')) {
                    element.classList.add('active');
                    if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                      document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                        el.innerHTML = "{% if box_variants == "3_6_9" %}9{% else %}6{% endif %}";
                      })
                    }
                    limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}9{% else %}6{% endif %};
                  }
                }
              })
            }
          } else {
            if(el.id == "box-check-first-item-{{ section.id }}") {

              limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}3{% else %}2{% endif %};

              if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                  el.innerHTML = "{% if box_variants == "3_6_9" %}3{% else %}2{% endif %}";
                })
              }

              if(document.querySelectorAll('.box-footer-form-{{ section.id }} input')) {
                document.querySelectorAll('.box-footer-form-{{ section.id }} input').forEach(el => {
                    const name = el.getAttribute('name');
                    const match = name.match(/\[(\d+)\]/);
                  
                    if (match && parseInt(match[1]) > limitItems{{ section.id | replace: '-', '' }}) {
                        console.log('minus');
                        el.remove();
                    }
                });
              }

              if(document.querySelectorAll('.box-item-{{ section.id }} .not-empty')) {
                document.querySelectorAll('.box-item-{{ section.id }} .not-empty').forEach((el, index) => {
                  index++;
                  let parentElement = el.parentNode;
                  const closeButton = parentElement.querySelector('.box-close-{{ section.id }}');
                  const price = parentElement.getAttribute('data-price');
                  const salePrice = parentElement.getAttribute('data-saleprice');
                  if(index > limitItems{{ section.id | replace: '-', '' }}) {
                    parentElement.classList.remove('active');
                    el.remove();
                    closeButton.style.display = "none";
                    sum = sum - Number(price);
                    saleSum = saleSum - Number(salePrice);
                  }
                })
              }
              
              
            } else if (el.id == "box-check-second-item-{{ section.id }}") {
              if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                  el.innerHTML = "{% if box_variants == "3_6_9" %}6{% else %}4{% endif %}";
                })
              }
              limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}6{% else %}4{% endif %};

              if(document.querySelectorAll('.box-footer-form-{{ section.id }} input')) {
                document.querySelectorAll('.box-footer-form-{{ section.id }} input').forEach(el => {
                    const name = el.getAttribute('name');
                    const match = name.match(/\[(\d+)\]/);
                  
                    if (match && parseInt(match[1]) > limitItems{{ section.id | replace: '-', '' }}) {
                        el.remove();
                    }
                });
              }

              if(document.querySelectorAll('.box-item-{{ section.id }} .not-empty')) {
                document.querySelectorAll('.box-item-{{ section.id }} .not-empty').forEach((el, index) => {
                  index++;
                  let parentElement = el.parentNode;
                  const closeButton = parentElement.querySelector('.box-close-{{ section.id }}');
                  const price = parentElement.getAttribute('data-price');
                  const salePrice = parentElement.getAttribute('data-saleprice');
                  if(index > limitItems{{ section.id | replace: '-', '' }}) {
                    parentElement.classList.remove('active');
                    el.remove();
                    closeButton.style.display = "none";
                    sum = sum - Number(price);
                    saleSum = saleSum - Number(salePrice);
                  }
                })
              }
            
            } else if (el.id == "box-check-third-item-{{ section.id }}") {
              if(document.querySelectorAll('.box-count-{{ section.id }}')) {
                document.querySelectorAll('.box-count-{{ section.id }}').forEach(el => {
                  el.innerHTML = "{% if box_variants == "3_6_9" %}9{% else %}6{% endif %}";
                })
              }
              limitItems{{ section.id | replace: '-', '' }} = {% if box_variants == "3_6_9" %}9{% else %}6{% endif %};
            }
          }

          let notEmptyItems = document.querySelectorAll('.box-items-{{ section.id }} .not-empty');
          saleSum = 0;
          if(notEmptyItems) {
            notEmptyItems.forEach(el => {
              let parentElement = el.parentNode;
              const price = parentElement.getAttribute('data-price');
              let salePrice;
              if(discountType == "first_type") {
                if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}3{% else %}2{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ first_checkbox_discount }}, 10) / 100);
                } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}6{% else %}4{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ second_checkbox_discount }}, 10) / 100);
                } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}9{% else %}6{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ third_checkbox_discount }}, 10) / 100);
                }
              } else if(discountType == "second_type") {
                if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}3{% else %}2{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ first_checkbox_discount_second }}, 10) / 100);
                } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}6{% else %}4{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ second_checkbox_discount_second }}, 10) / 100);
                } else if(limitItems{{ section.id | replace: '-', '' }} == {% if box_variants == "3_6_9" %}9{% else %}6{% endif %}) {
                  salePrice = parseInt(price, 10) - (parseInt(price, 10) * parseInt({{ third_checkbox_discount_second }}, 10) / 100);
                }
              }

              parentElement.setAttribute('data-saleprice', salePrice);
              saleSum = saleSum + Number(parentElement.getAttribute('data-saleprice'));
              console.log(saleSum);
            })
          }
          

          if (window.innerWidth > 1024) {
          countItems{{ section.id | replace: '-', '' }} = document.querySelectorAll('.box-items-default-{{ section.id }} .not-empty').length;
          } else {
            countItems{{ section.id | replace: '-', '' }} = document.querySelectorAll('.box-item-{{ section.id }} .not-empty').length;
          }

          if(document.querySelectorAll('.box-main-button-{{ section.id }}')) {
            document.querySelectorAll('.box-main-button-{{ section.id }}').forEach(el => {
              el.innerHTML = buttonHtml;
            })
          }
          if(document.querySelector('.box-count-{{ section.id }}')) {
            let count = limitItems{{ section.id | replace: '-', '' }} - countItems{{ section.id | replace: '-', '' }};
            document.querySelector('.box-count-{{ section.id }}').innerText = count;
          }

          if(countItems{{ section.id | replace: '-', '' }} == limitItems{{ section.id | replace: '-', '' }}) {
            let priceElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-regular-price-{{ section.id }}');
            let priceSaleElement = document.querySelector('.box-check-item-{{ section.id }}.active .box-sale-price-{{ section.id }}');
            priceElement.innerText = formayMoneyForBuyItWith(sum, "{{ shop.money_format }}");
            priceSaleElement.innerText = formayMoneyForBuyItWith(saleSum, "{{ shop.money_format }}");
            if(document.querySelectorAll('.box-main-button-{{ section.id }}')) {
              document.querySelectorAll('.box-main-button-{{ section.id }}').forEach(el => {
                let text = el.getAttribute("data-all");
                el.innerHTML = text;
                el.removeAttribute('disabled');
                el.innerHTML += "<span>" + formayMoneyForBuyItWith(saleSum, "{{ shop.money_format }}") + "</span>";
              })
            }
          }
          
        })
      })
    }
  }

  document.addEventListener('DOMContentLoaded', initBuildBox);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initBuildBox);
     document.addEventListener('shopify:section:load', initBuildBox);
  }
</script>

{% schema %}
  {
    "name": "SS - Build a Bundle",
    "settings": [
      {
        "type": "header",
        "content": "Setup guide",
        "info":"[Watch a walkthrough](https://www.loom.com/share/a4335beb20b7410b99a913a3aa16effd?sid=d89e8c23-89fd-46dd-905d-11b799722a44)"
      },
      {
        "type": "header",
        "content": "Collections Settings"
      },
      {
        "type": "collection",
        "label": "First Collection",
        "id": "first_collection"
      },
      {
        "type": "text",
        "id": "first_collection_title",
        "label": "First Collection Title",
        "info": "For Tabs in a Box. Replaces the Main Title of the Collection"
      },
      {
        "type": "collection",
        "label": "Second Collection",
        "id": "second_collection"
      },
      {
        "type": "text",
        "id": "second_collection_title",
        "label": "Second Collection Title",
        "info": "For Tabs in a Box. Replaces the Main Title of the Collection"
      },
      {
        "type": "checkbox",
        "id": "use_variants",
        "label": "Use Product Variant Selector"
      },
      {
        "type": "select",
        "id": "box_variants",
        "label": "Number of products in box",
        "info":"Remember to set automatic collection discounts for number of products. You can change the text in 'Box Checkbox Settings'",
        "default": "3_6_9",
        "options": [
          {
            "label": "2, 4 & 6",
            "value": "2_4_6"
          },
          {
            "label": "3, 6 & 9",
            "value": "3_6_9"
          }
        ]
      },
      {
        "type": "header",
        "content": "Products Grid Settings"
      },
      {
        "type": "range",
        "id": "products_row",
        "min": 2,
        "max": 4,
        "step": 1,
        "label": "Products per Row - Desktop",
        "default": 3
      },
      {
        "type": "select",
        "id": "products_row_mobile",
        "label": "Products per Row - Mobile",
        "default": "1",
        "options": [
          {
            "label": "1",
            "value": "1"
          },
          {
            "label": "2",
            "value": "2"
          }
        ]
      },
      {
        "type": "range",
        "id": "products_gap",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Products Grid Gap - Desktop",
        "default": 26
      },
      {
        "type": "range",
        "id": "products_gap_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Products Grid Gap - Mobile",
        "default": 26
      },
      {
        "type": "header",
        "content": "Product Card Settings"
      },
      {
        "type": "range",
        "id": "card_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Card Padding Vertical",
        "default": 12
      },
      {
        "type": "range",
        "id": "card_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Card Padding Vertical - Mobile",
        "default": 12
      },
      {
         "type": "range",
         "id": "card_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Card Padding Horizontal",
         "default": 12
      },
      {
         "type": "range",
         "id": "card_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Card Padding Horizontal - Mobile",
         "default": 12
      },
      {
         "type": "range",
         "id": "card_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Card Border Radius",
         "default": 0
      },
      {
         "type": "range",
         "id": "card_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Card Border Thickness",
         "default": 0
      },
      {
        "type": "checkbox",
        "id": "card_shadow",
        "label": "Card Shadow"
      },
      {
        "type": "checkbox",
        "id": "card_shadow_hover",
        "label": "Card Shadow on Hover",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "card_second_hover",
        "label": "Second Image on Hover",
        "default": true
      },
      {
        "type": "header",
        "content": "Image Settings"
      },
      {
         "type": "range",
         "id": "image_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Image Border Radius",
         "default": 0
      },
      {
         "type": "range",
         "id": "image_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Image Border Thickness",
         "default": 0
      },
      {
        "type": "select",
        "id": "image_ratio",
        "label": "Image Aspect Ratio",
        "default": "square",
        "options": [
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          },
          {
            "label": "Original",
            "value": "original"
          }
        ]
      },
      {
        "type": "select",
        "id": "image_ratio_mobile",
        "label": "Image Aspect Ratio - Mobile",
        "default": "portrait",
        "options": [
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          },
          {
            "label": "Original",
            "value": "original"
          }
        ]
      },
      {
        "type": "header",
        "content": "Product Title Settings"
      },
      {
        "type": "checkbox",
        "id": "title_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "title_font",
        "label": "Product Title Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "title_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Product Title Size",
        "default": 18
      },
      {
        "type": "range",
        "id": "title_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Product Title Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "title_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Product Title Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "title_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Product Title Margin Top",
        "default": 24
      },
      {
        "type": "checkbox",
        "id": "title_uppercase",
        "label": "Product Title Uppercase",
        "default": true
      },
      {
        "type": "header",
        "content": "Product Vendor Settings"
      },
      {
        "type": "checkbox",
        "id": "vendor_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "vendor_font",
        "label": "Product Vendor Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "vendor_size",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Product Vendor Size",
        "default": 13
      },
      {
        "type": "range",
        "id": "vendor_size_mobile",
        "min": 0,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Product  Vendor Size - Mobile",
        "default": 13
      },
      {
        "type": "range",
        "id": "vendor_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Product Vendor Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "vendor_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Product Vendor Margin Top",
        "default": 8
      },
      {
        "type": "checkbox",
        "id": "vendor_uppercase",
        "label": "Product Vendor Uppercase",
        "default": true
      },
      {
        "type": "header",
        "content": "Product Button"
      },
      {
        "type": "text",
        "id": "button",
        "label": "Button Text",
        "default": "ADD"
      },
      {
        "type": "checkbox",
        "id": "button_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "button_font",
        "label": "Button Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "button_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size",
        "default": 14
      },
      {
        "type": "range",
        "id": "button_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "button_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Button Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "button_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Margin Top",
        "default": 16
      },
      {
        "type": "range",
        "id": "button_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical",
        "default": 12
      },
      {
        "type": "range",
        "id": "button_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical - Mobile",
        "default": 12
      },
      {
         "type": "range",
         "id": "button_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal",
         "default": 24
      },
      {
         "type": "range",
         "id": "button_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal - Mobile",
         "default": 24
      },
      {
         "type": "range",
         "id": "button_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Border Radius",
         "default": 0
      },
      {
         "type": "range",
         "id": "button_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Button Border Thickness",
         "default": 1
      },
      {
        "type": "header",
        "content": "Box Settings"
      },
      {
         "type": "range",
         "id": "box_width",
         "min": 300,
         "max": 600,
         "step": 5,
         "unit": "px",
         "label": "Box Width - Desktop",
         "default": 480
      },
      {
         "type": "range",
         "id": "box_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Box Border Radius",
         "default": 32
      },
      {
         "type": "range",
         "id": "box_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Box Border Thickness",
         "default": 3
      },
      {
        "type": "header",
        "content": "Box Header Settings"
      },
      {
        "type": "range",
        "id": "header_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Box Header Padding Vertical",
        "default": 24
      },
      {
        "type": "range",
        "id": "header_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Box Header Padding Vertical - Mobile",
        "default": 0
      },
      {
         "type": "range",
         "id": "header_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Box Header Padding Horizontal",
         "default": 24
      },
      {
         "type": "range",
         "id": "header_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Box Header Padding Horizontal - Mobile",
         "default": 0
      },
      {
        "type": "header",
        "content": "Heading Settings"
      },
      {
        "type": "richtext",
        "id": "heading",
        "label": "Heading",
        "default": "<h2>Build a Box</h2>"
      },
      {
        "type": "checkbox",
        "id": "heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "heading_font",
        "label": "Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size",
        "default": 50
      },
      {
        "type": "range",
        "id": "heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size - Mobile",
        "default": 34
      },
      {
        "type": "range",
        "id": "heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Heading Line Height",
        "default": 100
      },
      {
        "type": "text_alignment",
        "id": "heading_align",
        "label": "Heading Text Align",
        "default": "center"
      },
      {
        "type": "text_alignment",
        "id": "heading_align_mobile",
        "label": "Heading Text Align - Mobile",
        "default": "center"
      },
      {
        "type": "header",
        "content": "Sub-Heading Settings"
      },
      {
        "type": "richtext",
        "id": "sub_heading",
        "label": "Sub-Heading",
        "default": "<p>Create your vibe and save money.</p>"
      },
      {
        "type": "checkbox",
        "id": "sub_heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "sub_heading_font",
        "label": "Sub-Heading Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "sub_heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Sub-Heading Size",
        "default": 18
      },
      {
        "type": "range",
        "id": "sub_heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Sub-Heading Size - Mobile",
        "default": 18
      },
      {
        "type": "range",
        "id": "sub_heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Sub-Heading Line Height",
        "default": 150
      },
      {
        "type": "range",
        "id": "sub_heading_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Sub-Heading Margin Top",
        "default": 16
      },
      {
        "type": "text_alignment",
        "id": "sub_heading_align",
        "label": "Sub-Heading Text Align",
        "default": "center"
      },
      {
        "type": "text_alignment",
        "id": "sub_heading_align_mobile",
        "label": "Sub-Heading Text Align - Mobile",
        "default": "center"
      },
      {
        "type": "header",
        "content": "Box Body Settings"
      },
      {
        "type": "range",
        "id": "body_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Box Body Padding Vertical",
        "default": 48
      },
      {
        "type": "range",
        "id": "body_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Box Body Padding Vertical - Mobile",
        "default": 0
      },
      {
         "type": "range",
         "id": "body_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Box Body Padding Horizontal",
         "default": 60
      },
      {
         "type": "range",
         "id": "body_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Box Body Padding Horizontal - Mobile",
         "default": 0
      },
      {
        "type": "header",
        "content": "Pick Text Settings"
      },
      {
        "type": "richtext",
        "id": "pick",
        "label": "Pick Text",
        "default": "<p><strong>PICK YOUR PACKAGING</strong></p>"
      },
      {
        "type": "checkbox",
        "id": "pick_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "pick_font",
        "label": "Pick Text Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "pick_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Pick Text Size",
        "default": 20
      },
      {
        "type": "range",
        "id": "pick_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Pick Text Size - Mobile",
        "default": 20
      },
      {
        "type": "range",
        "id": "pick_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Pick Text Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "pick_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Pick Text Margin Top",
        "default": 32
      },
      {
        "type": "range",
        "id": "pick_mt_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Pick Text Margin Top - Mobile",
        "default": 16
      },
      {
        "type": "text_alignment",
        "id": "pick_align",
        "label": "Pick Text Text Align",
        "default": "center"
      },
      {
        "type": "text_alignment",
        "id": "pick_align_mobile",
        "label": "Pick Text Text Align - Mobile",
        "default": "center"
      },
      {
        "type": "header",
        "content": "Box Tabs Settings"
      },
      {
         "type": "range",
         "id": "tabs_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Tabs Border Radius",
         "default": 32
      },
      {
         "type": "range",
         "id": "tabs_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Tabs Border Thickness",
         "default": 1
      },
      {
        "type": "range",
        "id": "tabs_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Tabs Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Tab Settings"
      },
      {
        "type": "checkbox",
        "id": "tab_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "tab_font",
        "label": "Tab Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "tab_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Tab Size",
        "default": 23
      },
      {
        "type": "range",
        "id": "tab_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Tab Size - Mobile",
        "default": 23
      },
      {
        "type": "range",
        "id": "tab_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Tab Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "tab_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Tab Padding Vertical",
        "default": 10
      },
      {
        "type": "range",
        "id": "tab_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Tab Padding Vertical - Mobile",
        "default": 10
      },
      {
         "type": "range",
         "id": "tab_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Tab Padding Horizontal",
         "default": 16
      },
      {
         "type": "range",
         "id": "tab_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Tab Padding Horizontal - Mobile",
         "default": 16
      },
      {
        "type": "header",
        "content": "Box Checkboxes Settings"
      },
      {
        "type": "range",
        "id": "checkboxes_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Checkboxes Margin Top",
        "default": 24
      },
      {
        "type": "header",
        "content": "Box Checkbox Settings"
      },
      {
        "type": "text",
        "id": "first_checkbox",
        "label": "First Checkbox Text",
        "default": "3-Pack"
      },
      {
        "type": "range",
        "id": "first_checkbox_discount",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "First Checkbox Discount(First Tab)",
        "default": 5
      },
      {
        "type": "range",
        "id": "first_checkbox_discount_second",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "First Checkbox Discount(Second Tab)",
        "default": 5
      },
      {
        "type": "text",
        "id": "second_checkbox",
        "label": "Second Checkbox",
        "default": "6-Pack"
      },
      {
        "type": "range",
        "id": "second_checkbox_discount",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Second Checkbox Discount(First Tab)",
        "default": 10
      },
      {
        "type": "range",
        "id": "second_checkbox_discount_second",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Second Checkbox Discount(Second Tab)",
        "default": 10
      },
      {
        "type": "text",
        "id": "third_checkbox",
        "label": "Third Checkbox",
        "default": "9-Pack"
      },
      {
        "type": "range",
        "id": "third_checkbox_discount",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Third Checkbox Discount(First Tab)",
        "default": 15
      },
      {
        "type": "range",
        "id": "third_checkbox_discount_second",
        "min": 0,
        "max": 100,
        "step": 1,
        "unit": "%",
        "label": "Third Checkbox Discount(Second Tab)",
        "default": 15
      },
      {
        "type": "checkbox",
        "id": "checkbox_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "checkbox_font",
        "label": "Checkbox Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "checkbox_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Checkbox Size",
        "default": 24
      },
      {
        "type": "range",
        "id": "checkbox_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Checkbox Size - Mobile",
        "default": 24
      },
      {
        "type": "range",
        "id": "checkbox_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Checkbox Line Height",
        "default": 100
      },
      {
        "type": "header",
        "content": "Price Settings"
      },
      {
        "type": "checkbox",
        "id": "price_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "price_font",
        "label": "Price Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "price_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Price Size",
        "default": 24
      },
      {
        "type": "range",
        "id": "price_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Price Size - Mobile",
        "default": 24
      },
      {
        "type": "range",
        "id": "price_strikethrough_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Strikethrough Price Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "price_strikethrough_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Strikethrough Price Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "price_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Price Line Height",
        "default": 100
      },
      {
        "type": "header",
        "content": "Main Button"
      },
      {
        "type": "text",
        "id": "main_button",
        "label": "Button Text",
        "default": "ADD TO CART"
      },
      {
        "type": "text",
        "id": "main_left_button",
        "label": "Button Left Text",
        "default": "PICK"
      },
      {
        "type": "text",
        "id": "main_right_button",
        "label": "Button Right Text",
        "default": "MORE PRODUCTS"
      },
      {
        "type": "checkbox",
        "id": "main_button_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "main_button_font",
        "label": "Button Font Family",
        "default": "josefin_sans_n4"
      },
      {
        "type": "range",
        "id": "main_button_size",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size",
        "default": 14
      },
      {
        "type": "range",
        "id": "main_button_size_mobile",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "px",
        "label": "Button Size - Mobile",
        "default": 14
      },
      {
        "type": "range",
        "id": "main_button_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Button Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "main_button_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Margin Top",
        "default": 32
      },
      {
        "type": "range",
        "id": "main_button_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical",
        "default": 12
      },
      {
        "type": "range",
        "id": "main_button_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Button Padding Vertical - Mobile",
        "default": 12
      },
      {
         "type": "range",
         "id": "main_button_padding_horizontal",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal",
         "default": 50
      },
      {
         "type": "range",
         "id": "main_button_padding_horizontal_mobile",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Padding Horizontal - Mobile",
         "default": 50
      },
      {
         "type": "range",
         "id": "main_button_radius",
         "min": 0,
         "max": 100,
         "step": 2,
         "unit": "px",
         "label": "Button Border Radius",
         "default": 0
      },
      {
         "type": "range",
         "id": "main_button_border_thickness",
         "min": 0,
         "max": 10,
         "step": 1,
         "unit": "px",
         "label": "Button Border Thickness",
         "default": 1
      },
      {
        "type": "header",
        "content": "Card Colors"
      },
      {
        "type": "color",
        "label": "Card Background Color",
        "id": "card_bg_color",
        "default": "#FFFAF5"
      },
      {
        "type": "color",
        "label": "Card Background Hover Color",
        "id": "card_bg_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Card Border Color",
        "id": "card_border_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Card Border Hover Color",
        "id": "card_border_hover_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Card Shadow Color",
        "id": "card_shadow_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Card Shadow Hover Color",
        "id": "card_shadow_hover_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Card Close Background Color",
        "id": "close_bg_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Card Select Color",
        "id": "select_color",
        "default": "#E6989C"
      },
      {
        "type": "color",
        "label": "Card Select Background Color",
        "id": "select_bg_color"
      },
      {
        "type": "color",
        "label": "Card Select Border Color",
        "id": "select_border_color",
        "default": "#E6989C"
      },
      {
        "type": "header",
        "content": "Image Colors"
      },
      {
        "type": "color",
        "label": "Image Border Color",
        "id": "image_border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Product Colors"
      },
      {
        "type": "color",
        "label": "Product Title Color",
        "id": "title_color",
        "default": "#000000"
      },
      {
        "type": "color",
        "label": "Product Vendor Color",
        "id": "vendor_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Button Colors"
      },
      {
        "type": "color",
        "label": "Button Color",
        "id": "button_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Hover Color",
        "id": "button_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Button Background Color",
        "id": "button_bg_color"
      },
      {
        "type": "color",
        "label": "Button Background Hover Color",
        "id": "button_bg_hover_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Border Color",
        "id": "button_border_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Border Hover Color",
        "id": "button_border_hover_color",
        "default": "#e6989c"
      },
      {
        "type": "header",
        "content": "Box Colors"
      },
      {
        "type": "color",
        "label": "Box Border Color",
        "id": "box_border_color",
        "default": "#E6989C"
      },
      {
        "type": "color",
        "label": "Box Header Background Color",
        "id": "header_bg_color",
        "default": "#E6989C"
      },
      {
        "type": "color",
        "label": "Box Heading Color",
        "id": "heading_color",
        "default": "#484646"
      },
      {
        "type": "color",
        "label": "Box Sub-Heading Color",
        "id": "sub_heading_color",
        "default": "#484646"
      },
      {
        "type": "color",
        "label": "Box Pick Text Color",
        "id": "pick_color",
        "default": "#484646"
      },
      {
        "type": "header",
        "content": "Box Tabs Colors"
      },
      {
        "type": "color",
        "label": "Tabs Border Color",
        "id": "tabs_border_color",
        "default": "#896367"
      },
      {
        "type": "color",
        "label": "Tab Color",
        "id": "tab_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Tab Hover Color",
        "id": "tab_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Tab Active Color",
        "id": "tab_active_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Tab Background Color",
        "id": "tab_bg_color"
      },
      {
        "type": "color",
        "label": "Tab Background Hover Color",
        "id": "tab_bg_hover_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Tab Background Ative Color",
        "id": "tab_bg_active_color",
        "default": "#e6989c"
      },
      {
        "type": "header",
        "content": "Box Checkboxes"
      },
      {
        "type": "color",
        "label": "Checkbox Item Background Active Color",
        "id": "checkbox_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Checkbox Circle Active Color",
        "id": "checkbox_circle_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Checkbox Text Color",
        "id": "checkbox_color",
        "default": "#484646"
      },
      {
        "type": "color",
        "label": "Price Color",
        "id": "price_color",
        "default": "#484646"
      },
      {
        "type": "color",
        "label": "Strikethrough Price Color",
        "id": "price_strikethrough_color",
        "default": "#AAA6A4"
      },
      {
        "type": "header",
        "content": "Main Button Colors"
      },
      {
        "type": "color",
        "label": "Button Color",
        "id": "main_button_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Button Hover Color",
        "id": "main_button_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Button Background Color",
        "id": "main_button_bg_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Background Hover Color",
        "id": "main_button_bg_hover_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Border Color",
        "id": "main_button_border_color",
        "default": "#e6989c"
      },
      {
        "type": "color",
        "label": "Button Border Hover Color",
        "id": "main_button_border_hover_color",
        "default": "#e6989c"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFAF5"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 64
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 32
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full Width",
        "default": false
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 0,
        "max": 400,
        "step": 5,
        "unit": "rem",
        "label": "Section content width",
        "default": 125
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      }
    ],
    "presets": [
      {
        "name": "SS - Build a Bundle"
      }
    ]
  }
{% endschema %}